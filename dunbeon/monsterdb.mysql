CREATE TABLE Monsters (
	MonsterID int,
    MonsterName varchar(255),
    Atk int,
    Def int,
    MonsterDescription varchar(255)
    );

ALTER TABLE Monsters ADD Room int;

INSERT INTO django_adv_db.rooms VALUES (2, "second", "next room", "stone", "extra stone", 7, 8);

UPDATE django_adv_db.rooms SET wall_texture = 'stone wall' WHERE idrooms=2;

INSERT INTO django_adv_db.monsters VALUES (1, "Orc", 10, 12, "standard orc", 1);

SELECT r.room_name, r.room_description, m.monstername
FROM django_adv_db.rooms AS r, django_adv_db.monsters AS m
WHERE m.roomid = r.idrooms;

SELECT r.room_name, r.room_description, m.monstername, m.monsterdescription
FROM django_adv_db.rooms AS r, django_adv_db.monsters as m
WHERE m.roomid=r.idrooms;

SELECT django_adv_db.rooms.room_name, django_adv_db.rooms.room_description, django_adv_db.monsters.monstername, django_adv_db.monsters.monsterdescription
FROM django_adv_db.rooms
LEFT JOIN django_adv_db.monsters ON django_adv_db.rooms.idrooms=django_adv_db.monsters.roomid;

CREATE TABLE django_adv_db.treasures (
	Treasureid int NOT NULL AUTO_INCREMENT,
    TreasureName varchar(255),
    TreasureDescription varchar(255),
    roomID int,
    locationID int,
    PRIMARY KEY (Treasureid)
    );
    
INSERT INTO django_adv_db.treasures (TreasureName, TreasureDescription, roomID, locationID) VALUES (
	"gold",
    "pile of gold",
    2,
    1);
    
CREATE TABLE django_adv_db.locations (
    Locationid int NOT NULL AUTO_INCREMENT,
    monsterid int,
    specifics varchar(2555),
    dificulty int,
    PRIMARY KEY (Locationid)
    );

INSERT INTO django_adv_db.locations (monsterid, specifics, dificulty) VALUES (
	1,
    "in a bag",
    3
    );

SELECT MAX(length), room_name
FROM django_adv_db.rooms
ORDER BY MAX(length) ASC;

SELECT MAX(width), room_name
FROM django_adv_db.rooms
ORDER BY width ASC;

SELECT room_name, width, length
FROM django_adv_db.rooms
HAVING MAX(width) > 5;

SELECT * FROM django_adv_db.rooms
WHERE EXISTS (SELECT RoomID FROM django_adv_db.monsters WHERE rooms.idrooms = monsters.roomid);

SELECT * FROM django_adv_db.rooms
WHERE room_name IN ("entry", "second");

SELECT * FROM django_adv_db.rooms
WHERE room_name NOT IN ("entry", "storage");

SELECT * FROM django_adv_db.rooms LIMIT 1;
